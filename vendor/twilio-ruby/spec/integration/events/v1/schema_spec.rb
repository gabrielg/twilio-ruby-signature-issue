##
# This code was generated by
# \ / _    _  _|   _  _
#  | (_)\/(_)(_|\/| |(/_  v1.0.0
#       /       /
#
# frozen_string_literal: true

require 'spec_helper.rb'

describe 'Schema' do
  it "can fetch" do
    @holodeck.mock(Twilio::Response.new(500, ''))

    expect {
      @client.events.v1.schemas('id').fetch()
    }.to raise_exception(Twilio::REST::TwilioError)

    expect(
    @holodeck.has_request?(Holodeck::Request.new(
        method: 'get',
        url: 'https://events.twilio.com/v1/Schemas/id',
    ))).to eq(true)
  end

  it "receives fetch responses" do
    @holodeck.mock(Twilio::Response.new(
        200,
      %q[
      {
          "id": "Messaging.MessageStatus",
          "url": "https://events.twilio.com/v1/Schemas/Messaging.MessageStatus",
          "latest_version_date_created": "2020-07-30T20:00:00Z",
          "latest_version": 1,
          "links": {
              "versions": "https://events.twilio.com/v1/Schemas/Messaging.MessageStatus/Versions"
          }
      }
      ]
    ))

    actual = @client.events.v1.schemas('id').fetch()

    expect(actual).to_not eq(nil)
  end
end